package hello_java;

public class Producer_Consumer {
    public static void main(String[] args) {
        ShareData shareData = new ShareData();

        new Thread(() ->{
            for (int i = 0; i < 10; i++) {
                shareData.consume();
            }
        }).start();

        new Thread(() ->{
            for (int i = 0; i < 10; i++) {
                shareData.consume();
            }
        }).start();

        new Thread(() ->{
            for (int i = 0; i < 10; i++) {
                shareData.produce();
            }
        }).start();

        new Thread(() ->{
            for (int i = 0; i < 10; i++) {
                shareData.produce();
            }
        }).start();
    }

}

class ShareData{
    private int count = 0;

    public synchronized void produce(){
        while(count != 0){
            try {
                this.wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        count ++;
        System.out.println("生产者生产了一件商品，商品还有 " + count);
        this.notifyAll();
    }

    public synchronized void consume(){
        while (count != 1){
            try {
                this.wait();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        count --;
        System.out.println("消费者消费了一件商品，商品还有 " + count);
        this.notifyAll();
    }
}
